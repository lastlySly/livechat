<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lastlysly.mapper.FriendgroupsSheetMapper">
  <resultMap id="BaseResultMap" type="cn.lastlysly.pojo.FriendgroupsSheet">
    <result column="friendgroups_id" jdbcType="INTEGER" property="friendgroupsId" />
    <result column="friendgroups_name" jdbcType="VARCHAR" property="friendgroupsName" />
    <result column="friendgroups_user_loginid" jdbcType="VARCHAR" property="friendgroupsUserLoginid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    friendgroups_id, friendgroups_name, friendgroups_user_loginid
  </sql>
  <select id="selectByExample" parameterType="cn.lastlysly.pojo.FriendgroupsSheetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friendgroups_sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.lastlysly.pojo.FriendgroupsSheetExample">
    delete from friendgroups_sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lastlysly.pojo.FriendgroupsSheet">
    insert into friendgroups_sheet (friendgroups_id, friendgroups_name, 
      friendgroups_user_loginid)
    values (#{friendgroupsId,jdbcType=INTEGER}, #{friendgroupsName,jdbcType=VARCHAR}, 
      #{friendgroupsUserLoginid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lastlysly.pojo.FriendgroupsSheet">
    insert into friendgroups_sheet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="friendgroupsId != null">
        friendgroups_id,
      </if>
      <if test="friendgroupsName != null">
        friendgroups_name,
      </if>
      <if test="friendgroupsUserLoginid != null">
        friendgroups_user_loginid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="friendgroupsId != null">
        #{friendgroupsId,jdbcType=INTEGER},
      </if>
      <if test="friendgroupsName != null">
        #{friendgroupsName,jdbcType=VARCHAR},
      </if>
      <if test="friendgroupsUserLoginid != null">
        #{friendgroupsUserLoginid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lastlysly.pojo.FriendgroupsSheetExample" resultType="java.lang.Long">
    select count(*) from friendgroups_sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friendgroups_sheet
    <set>
      <if test="record.friendgroupsId != null">
        friendgroups_id = #{record.friendgroupsId,jdbcType=INTEGER},
      </if>
      <if test="record.friendgroupsName != null">
        friendgroups_name = #{record.friendgroupsName,jdbcType=VARCHAR},
      </if>
      <if test="record.friendgroupsUserLoginid != null">
        friendgroups_user_loginid = #{record.friendgroupsUserLoginid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friendgroups_sheet
    set friendgroups_id = #{record.friendgroupsId,jdbcType=INTEGER},
      friendgroups_name = #{record.friendgroupsName,jdbcType=VARCHAR},
      friendgroups_user_loginid = #{record.friendgroupsUserLoginid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>