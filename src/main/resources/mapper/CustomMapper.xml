<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lastlysly.mapper.CustomMapper">

    <resultMap id="MyBaseResultMap" type="cn.lastlysly.pojo.UserinfoSheet">
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="user_login_id" jdbcType="VARCHAR" property="userLoginId" />
        <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
        <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
        <result column="user_gender" jdbcType="BIT" property="userGender" />
        <result column="user_birthday" jdbcType="TIMESTAMP" property="userBirthday" />
        <result column="user_telephone" jdbcType="VARCHAR" property="userTelephone" />
        <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
        <result column="user_motto" jdbcType="VARCHAR" property="userMotto" />
        <result column="user_synopsis" jdbcType="VARCHAR" property="userSynopsis" />
        <result column="user_nation_id" jdbcType="INTEGER" property="userNationId" />
        <result column="user_province_id" jdbcType="INTEGER" property="userProvinceId" />
        <result column="user_city_id" jdbcType="INTEGER" property="userCityId" />
        <result column="user_userstate_id" jdbcType="INTEGER" property="userUserstateId" />
        <result column="user_realname" jdbcType="VARCHAR" property="userRealname" />
        <result column="user_age" jdbcType="INTEGER" property="userAge" />
        <result column="user_vocation" jdbcType="VARCHAR" property="userVocation" />
        <result column="user_headportrait" jdbcType="VARCHAR" property="userHeadportrait" />
        <result column="user_password_salt" jdbcType="VARCHAR" property="userPasswordSalt" />
    </resultMap>

    <resultMap id="CustomFriendsResultMap" type="cn.lastlysly.pojo.CustomFriendsInfo">
       <result column="friends_user_loginid" property="customFriendsUserId" /><!--好友归属用户ID-->
       <result column="user_id" property="customFriendsFriendsId" /><!--好友的ID-->
       <result column="user_login_id" property="customFriendsLoginId" /><!--好友的登陆账号-->

       <result column="user_nickname" property="customFriendsNickName" /><!--好友昵称-->
       <result column="friends_remarks" property="customFriendsRemark" /><!--给好友的备注-->
       <result column="friends_friendgroupsid" property="customFriendsGroupId" /><!--好友所在分组的组Id-->
       <result column="user_email" property="customFriendsEmail" /><!--好友的邮箱-->
       <result column="user_telephone" property="customFriendsTel" /><!--好友电话号码-->
       <result column="user_motto" property="customFriendsMotto" /><!--好友座右铭-->
       <result column="user_headportrait" property="customFriendsHeadportrait" /><!--好友头像-->
       <result column="user_gender" property="customFriendsGender" /><!--好友性别-->
       <result column="user_age" property="customFriendsAge" /><!--好友年龄-->
    </resultMap>

    <resultMap id="MyFriendApplicationBaseResultMap" type="cn.lastlysly.pojo.FriendApplicationSheet">
        <result column="friend_application_id" jdbcType="INTEGER" property="friendApplicationId" />
        <result column="friend_application_from" jdbcType="VARCHAR" property="friendApplicationFrom" />
        <result column="friend_application_to" jdbcType="VARCHAR" property="friendApplicationTo" />
        <result column="friend_application_remark" jdbcType="VARCHAR" property="friendApplicationRemark" />
        <result column="friend_application_group" jdbcType="INTEGER" property="friendApplicationGroup" />
        <result column="friend_application_time" jdbcType="TIMESTAMP" property="friendApplicationTime" />
        <result column="friend_application_message" jdbcType="VARCHAR" property="friendApplicationMessage" />
        <result column="friend_application_status" jdbcType="VARCHAR" property="friendApplicationStatus" />
        <result column="friend_application_refuse_message" jdbcType="VARCHAR" property="friendApplicationRefuseMessage" />
    </resultMap>

    <resultMap id="MyMessageBaseResultMap" type="cn.lastlysly.pojo.MessagesSheet">
        <result column="messages_id" jdbcType="INTEGER" property="messagesId" />
        <result column="messages_status" jdbcType="BIT" property="messagesStatus" />
        <result column="messages_time" jdbcType="TIMESTAMP" property="messagesTime" />
        <result column="messages_typeid" jdbcType="INTEGER" property="messagesTypeid" />
        <result column="messages_from_loginid" jdbcType="VARCHAR" property="messagesFromLoginid" />
        <result column="messages_to_loginid" jdbcType="VARCHAR" property="messagesToLoginid" />
    </resultMap>
    <resultMap extends="MyMessageBaseResultMap" id="MyMessageResultMapWithBLOBs" type="cn.lastlysly.pojo.MessagesSheet">
        <result column="messages_postmessages" jdbcType="LONGVARCHAR" property="messagesPostmessages" />
    </resultMap>


    <!--通过用户ID获取好友列表-->
    <select id="selectCustomFriendsInfoByUserId" parameterType="java.util.Map" resultMap="CustomFriendsResultMap">

        select userinfo_sheet.*,friends_sheet.*,friendgroups_sheet.friendgroups_name from
         friends_sheet join userinfo_sheet on friends_sheet.friends_friend_loginid = userinfo_sheet.user_login_id
          join friendgroups_sheet on friends_sheet.friends_friendgroupsid = friendgroups_sheet.friendgroups_id
           where friends_sheet.friends_user_loginid = #{userId};

    </select>

    <!--通过用户ID和朋友ID获取该好友详细信息-->
    <select id="selectFriendsInfoByUserIdandFriendId" parameterType="java.util.Map" resultMap="CustomFriendsResultMap">
        select userinfo_sheet.*,friends_sheet.*,friendgroups_sheet.friendgroups_name from
         friends_sheet join userinfo_sheet on friends_sheet.friends_friend_loginid = userinfo_sheet.user_login_id
          join friendgroups_sheet on friends_sheet.friends_friendgroupsid = friendgroups_sheet.friendgroups_id
           where friends_sheet.friends_user_loginid = #{userId} and friends_sheet.friends_friend_loginid=#{friendId};
    </select>

    <!--通过用户登录账号或用户昵称查询-->
    <select id="selectNewFriendsByLoginIdOrNickname" parameterType="java.util.Map" resultMap="MyBaseResultMap">
        select * from userinfo_sheet where
        user_nickname = #{loginIdOrNickname}
        or user_login_id = #{loginIdOrNickname}
    </select>

    <!--据登陆ID获取与其相关的好友申请-->
    <select id="listApplicationByLoginId" parameterType="java.util.Map" resultMap="MyFriendApplicationBaseResultMap">
        select * from friend_application_sheet where friend_application_from = #{loginId} or
        friend_application_to=#{loginId} order by friend_application_time desc

    </select>

    <!--根据发送方和接收方获取消息-->
    <select id="selectLastMessageByFromAndTo" parameterType="java.util.Map" resultMap="MyMessageResultMapWithBLOBs">
        select *  from messages_sheet WHERE messages_from_loginid = #{fromLoginId} and
         messages_to_loginid = #{toLoginId} and messages_time = (select MAX(messages_time) from messages_sheet
          where messages_from_loginid = #{fromLoginId} and messages_to_loginid = #{toLoginId})
        order by messages_time desc
    </select>
    <!--查询用户之间的消息记录-->
    <select id="listMessageByUserloginidOrFriendLoginid" parameterType="java.util.Map" resultMap="MyMessageResultMapWithBLOBs">
        select * from messages_sheet where (messages_to_loginid = #{userLoginId} and messages_from_loginid = #{friendLoginId})
        or (messages_to_loginid = #{friendLoginId} and messages_from_loginid = #{userLoginId}) order by messages_time desc
    </select>

    <!--删除好友-->
    <delete id="delFriendByUserloginidAndFriendLoginid" parameterType="java.util.Map">
        DELETE from friends_sheet where (friends_friend_loginid = #{friendLoginId} and friends_user_loginid = #{userLoginId}) or
        (friends_friend_loginid = #{userLoginId} and friends_user_loginid = #{friendLoginId});
    </delete>
    <!--删除聊天记录-->
    <delete id="delMessagesByUserloginidAndFriendLoginid" parameterType="java.util.Map">
        DELETE from messages_sheet where (messages_from_loginid = #{userLoginId} and messages_to_loginid = #{friendLoginId}) or
        (messages_from_loginid = #{friendLoginId} and messages_to_loginid = #{userLoginId});
    </delete>

    <!--查询用户之间聊天记录条数-->
    <select id="messagesPageCountBrtweenUsers" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(*) from messages_sheet where (messages_from_loginid = #{userLoginId}
         and messages_to_loginid = #{friendLoginId}) or (messages_to_loginid=#{userLoginId}
          and messages_from_loginid = #{friendLoginId});
    </select>

</mapper>